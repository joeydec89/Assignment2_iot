
#include <WiFi.h> //wifi connection
#include <PubSubClient.h> //MQTT messaging
#include <Arduino.h>

// Wi-Fi credentials: replace with those of your network
const char* ssid = "iot_wireless";  // The name of the WiFi network
const char* password = "passphrase"; // The WiFi network passkey

// MQTT broker details: replace with your own
const char* mqtt_server = "192.168.51.156"; // The MQTT broker's hostname or IP address
const int mqtt_port = 1883;  // MQTT broker port (1883 is default)
const char* mqtt_subscribe_topic = "room/lighting";
//const char* mqtt_topic = "room/lighting";  // MQTT topic to publish messages
const char* mqtt_publish_topic = "lighting/value";
// MQTT client name prefix (will add MAC address)
String name = "ESP32Client_";

// Create an instance of the WiFiClient class
WiFiClient espClient;
// Create an instance of the PubSubClient class
PubSubClient client(espClient);

// Timer for publishing every 5 seconds
unsigned long previousMillis = 0;
const long interval = 5000;

int lightPin = 34; // Analog pin connected to the photocell
int lightValue = 0; // Variable to store the light level
int LEDPIN = 18;



void msgReceived(char* topic, byte* payload, unsigned int length) {

    String message;
  for (int p = 0; p < length; p++) {
    message += (char)payload[p];
  }

  pinMode(LEDPIN, OUTPUT);
  Serial.println(message);

  if (message == "true") {
    digitalWrite(LEDPIN,HIGH);
    Serial.println("Payload = 1");    
  }else if (message == "false") {
    digitalWrite(LEDPIN, LOW);
    Serial.println("Payload = 0");
  }
  
}



void connect() {
  // Loop until we're reconnected
  while (!client.connected()) {
    Serial.println("Attempting MQTT connection...");

    // Attempt to connect
    if (client.connect(name.c_str())) {
      Serial.println("Connected to MQTT broker");
      client.subscribe(mqtt_subscribe_topic);
    } else {
      Serial.print("Failed to connect to MQTT broker, rc=");
      Serial.print(client.state());
      Serial.println("Try again in 5 seconds");
      delay(5000);
    }
  }
}


void setup() {
 // Start Serial communication
  Serial.begin(115200);


  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Set MQTT server and port
  client.setServer(mqtt_server, mqtt_port);
  client.setCallback(msgReceived);

  pinMode(lightPin, INPUT);

}


void loop() {
  // Connect to MQTT if necessary
  if (!client.connected()) {
    connect();
  }

  // Get the current time
  unsigned long currentMillis = millis();

  // Publish a message every 5 seconds
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;


   // Measure the light level
  lightValue = analogRead(lightPin);


  // Publish the lighting data to the MQTT topic
  String lightingMessage = String(lightValue);
  client.publish("lighting/value", lightingMessage.c_str());

  }

  // Allow the PubSubClient to process incoming messages
  client.loop();

}
